# CleanDeck for CMD-Auth (https://link133.com) and other similar applications
# Copyright (c) 2023-2024 Iotu Nicolae, nicolae.g.iotu@link133.com
# Licensed under the terms of the MIT License (MIT)
# For the full copyright and license information, please view
# the LICENSE file that was distributed with this source code.

# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format              main  '$remote_addr - $invalid_referer [$time_local] "$request" '
                                '$status $body_bytes_sent "$http_referer" '
                                '"$http_user_agent" "$http_x_forwarded_for"';

    access_log              /var/log/nginx/access.log  main;

    sendfile                on;
    tcp_nopush              on;
    keepalive_timeout       65;
    types_hash_max_size     4096;

    include                 /etc/nginx/mime.types;
    default_type            text/plain;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include                 /etc/nginx/conf.d/*.conf;

    # Redirect "www.site.com" to "site.com"
    server {
        listen              443 ssl http2;
        listen              [::]:443 ssl http2;
        server_name         www.CLEANDECK_SERVER_NAME;
        proxy_pass_header   Server;
        server_tokens       off;

        ssl_certificate         "CLEANDECK_DEPLOY_PATH/ssl/generated/cleandeck.crt";
        ssl_certificate_key     "CLEANDECK_DEPLOY_PATH/ssl/generated/cleandeck.key";
        ssl_password_file       "CLEANDECK_DEPLOY_PATH/ssl/generated/cleandeck-ssl-password.txt";
        ssl_session_cache       shared:SSL:1m;
        ssl_session_timeout     10m;
        ssl_ciphers             PROFILE=SYSTEM;
        ssl_prefer_server_ciphers on;

        rewrite .* $scheme://CLEANDECK_SERVER_NAME$request_uri permanent;
    }

    server {
        listen              443 ssl http2;
        listen              [::]:443 ssl http2;
        server_name         CLEANDECK_SERVER_NAME;
        proxy_pass_header   Server;
        server_tokens       off;

        root                "CLEANDECK_PUBLIC_PATH";
        index               index.php;
        autoindex           off;

        gzip                on;
        gzip_comp_level     3;
        gzip_types          text/plain text/xml text/css text/javascript application/javascript image/vnd.microsoft.icon image/png image/gif image/svg+xml image/jpeg

        client_max_body_size 8m;

        ssl_certificate         "CLEANDECK_DEPLOY_PATH/ssl/generated/cleandeck.crt";
        ssl_certificate_key     "CLEANDECK_DEPLOY_PATH/ssl/generated/cleandeck.key";
        ssl_password_file       "CLEANDECK_DEPLOY_PATH/ssl/generated/cleandeck-ssl-password.txt";
        ssl_session_cache       shared:SSL:1m;
        ssl_session_timeout     10m;
        ssl_ciphers             PROFILE=SYSTEM;
        ssl_prefer_server_ciphers on;

        # CMD-Auth DevOps -> Uncomment this section in order to see/test API, documentation etc.
        # Overrides CleanDeck routes. Frequently used: "GET /api" "GET /documentation".
        #location ~ {
        #   proxy_pass https://localhost:12345;
        #   proxy_ssl_verify off;
        #}
        # END CMD-Auth DevOps

        location ~ \.php$ {
            include         fastcgi.conf;
            fastcgi_pass    unix:/var/run/php-fpm/www.sock;
            fastcgi_index   index.php;
        }

        # Load configuration files for the default server block.
        include /etc/nginx/default.d/*.conf;

        # Deny access to files .htaccess and .gitkeep
        location ~ (.*)/\.(htaccess|gitkeep)$ {
            rewrite .* / permanent;
        }

        # Hotlink Protection
        valid_referers none blocked server_names ~CLEANDECK_SERVER_NAME(\/.*);
        location = /favicon.ico {
            if ($invalid_referer) {
                return 403;
            }
        }
        location ~ /(misc|template)(/?.*)?$ {
            if ($invalid_referer) {
                return 403;
            }
        }

        # Deny access to files .htaccess and .gitkeep
        location ~ (.*)\.(htaccess|gitkeep)$ {
            rewrite ^.*$ / last;
        }

        # Directory access or listing forbidden
        if (-d $request_filename) {
            rewrite ^/(.+)$ / permanent;
        }

        # Redirect on trailing slashes
        location ~ ^(.+)/$ {
            rewrite ^(.+)/$ $1 permanent;
        }

        # Valid file or go to index.php
        try_files  $request_uri /index.php$request_uri;
    }
}
